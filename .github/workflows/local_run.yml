name: Build and Deploy to ECR and Kubernetes

on:
  push:
    branches:
      - main  # Adjust this to the branches where you want this workflow to run

env:
  AWS_REGION: us-west-2  # Adjust this to your AWS region
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}  # Your ECR registry URI
  KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}  # Your base64-encoded kubeconfig file

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    - name: Build and push Docker images
      run: |
        services=(
          "emailservice"
          "productcatalogservice"
          "recommendationservice"
          "shippingservice"
          "checkoutservice"
          "paymentservice"
          "currencyservice"
          "cartservice"
          "frontend"
          "adservice"
          "loadgenerator"
        )
        for service in "${services[@]}"; do
          context="src/$service"
          # Special case for cartservice
          if [ "$service" == "cartservice" ]; then
            context="src/cartservice/src"
          fi
          docker build -t $service:latest $context
          docker tag $service:latest $ECR_REGISTRY/$service:latest
          docker push $ECR_REGISTRY/$service:latest
        done

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      run: |
        echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > kubeconfig.yml
        echo "KUBECONFIG_FILE=${GITHUB_WORKSPACE}/kubeconfig.yml" >> $GITHUB_ENV

    - name: Deploy to Kubernetes
      run: kubectl apply -f kubernetes-manifests/
