name: Push Docker Images to ECR

on:
  workflow_dispatch:

env:
  ECR_REGISTRY: 058264132523.dkr.ecr.ca-central-1.amazonaws.com/online-boutique
  AWS_REGION: ca-central-1

jobs:

  push-to-ecr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.YOUR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.YOUR_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.YOUR_AWS_REGION }}

    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ${{ secrets.YOUR_AWS_REGION }} | docker login --username AWS --password-stdin 058264132523.dkr.ecr.ca-central-1.amazonaws.com/online-boutique

    - name: Pull and Push Docker Images
      env:
        IMAGES: >-
          gcr.io/google-samples/microservices-demo/emailservice:v0.9.0
          gcr.io/google-samples/microservices-demo/checkoutservice:v0.9.0
          gcr.io/google-samples/microservices-demo/recommendationservice:v0.9.0
          gcr.io/google-samples/microservices-demo/frontend:v0.9.0
          gcr.io/google-samples/microservices-demo/paymentservice:v0.9.0
          gcr.io/google-samples/microservices-demo/productcatalogservice:v0.9.0
          gcr.io/google-samples/microservices-demo/cartservice:v0.9.0
          gcr.io/google-samples/microservices-demo/loadgenerator:v0.9.0
          gcr.io/google-samples/microservices-demo/currencyservice:v0.9.0
          gcr.io/google-samples/microservices-demo/shippingservice:v0.9.0
          gcr.io/google-samples/microservices-demo/adservice:v0.9.0
      run: |
        for image in $IMAGES; do
          echo "Pulling Docker image: $image"
          docker pull "$image"
          trimmed_image="${image//:/-}"
          tagged_image="$ECR_REGISTRY:${trimmed_image#gcr.io/google-samples/microservices-demo/}"
          docker tag "$image" "$tagged_image"
          docker push "$tagged_image"
        done